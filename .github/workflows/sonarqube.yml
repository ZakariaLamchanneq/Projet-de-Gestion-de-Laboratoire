name: SonarQube Analysis

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  discovery:
    runs-on: [self-hosted, windows]
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Add SonarQube to PATH
        run: echo "C:\\Libraries\\sonarqube-10.6.0.92116\\bin\\windows-x86-64" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8

      - name: Run SonarQube Scanner For Discovery Server
        run: |
          cd Back-End/discovery
          sonar-scanner ^
            -Dsonar.projectKey=labmaster.backend.discovery ^
            -Dsonar.sources=src/main/java ^
            -Dsonar.java.binaries=target ^
            -Dsonar.host.url=%SONAR_HOST_URL% ^
            -Dsonar.login=%SONAR_TOKEN%
        env:
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  config_server:
    runs-on: [self-hosted, windows]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Add SonarQube to PATH
        run: echo "C:\\Libraries\\sonarqube-10.6.0.92116\\bin\\windows-x86-64" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8

      - name: Run SonarQube Scanner for Config Server
        run: |
          cd Back-End/config-server
          sonar-scanner ^
            -Dsonar.projectKey=labmaster.backend.configserver ^
            -Dsonar.sources=src/main/java ^
            -Dsonar.java.binaries=target ^
            -Dsonar.host.url=%SONAR_HOST_URL% ^
            -Dsonar.login=%SONAR_TOKEN%
        env:
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  # Repeat similar steps for other services as shown below:

  laboratoire:
    runs-on: [self-hosted, windows]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Add SonarQube to PATH
        run: echo "C:\\Libraries\\sonarqube-10.6.0.92116\\bin\\windows-x86-64" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8

      - name: Run SonarQube Scanner for Laboratoire
        run: |
          cd Back-End/laboratoire
          sonar-scanner ^
            -Dsonar.projectKey=labmaster.backend.laboratoire ^
            -Dsonar.sources=src/main/java ^
            -Dsonar.java.binaries=target ^
            -Dsonar.host.url=%SONAR_HOST_URL% ^
            -Dsonar.login=%SONAR_TOKEN%
        env:
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  utilisateur:
    runs-on: [self-hosted, windows]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Add SonarQube to PATH
        run: echo "C:\\Libraries\\sonarqube-10.6.0.92116\\bin\\windows-x86-64" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8

      - name: Run SonarQube Scanner for Utilisateur
        run: |
          cd Back-End/utilisateur
          sonar-scanner ^
            -Dsonar.projectKey=labmaster.backend.utilisateur ^
            -Dsonar.sources=src/main/java ^
            -Dsonar.java.binaries=target ^
            -Dsonar.host.url=%SONAR_HOST_URL% ^
            -Dsonar.login=%SONAR_TOKEN%
        env:
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  gateway:
    runs-on: [self-hosted, windows]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Add SonarQube to PATH
        run: echo "C:\\Libraries\\sonarqube-10.6.0.92116\\bin\\windows-x86-64" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8

      - name: Run SonarQube Scanner for Gateway
        run: |
          cd Back-End/gateway
          sonar-scanner ^
            -Dsonar.projectKey=labmaster.backend.gateway ^
            -Dsonar.sources=src/main/java ^
            -Dsonar.java.binaries=target ^
            -Dsonar.host.url=%SONAR_HOST_URL% ^
            -Dsonar.login=%SONAR_TOKEN%
        env:
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  frontend:
    runs-on: [self-hosted, windows]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Add SonarQube to PATH
        run: echo "C:\\Libraries\\sonarqube-10.6.0.92116\\bin\\windows-x86-64" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8

      - name: Run SonarQube Scanner for Front-End
        run: |
          cd Front-End
          sonar-scanner ^
            -Dsonar.projectKey=labmaster.frontend ^
            -Dsonar.sources=src/main/java ^
            -Dsonar.java.binaries=target ^
            -Dsonar.host.url=%SONAR_HOST_URL% ^
            -Dsonar.login=%SONAR_TOKEN%
        env:
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  # Repeat for other services: gateway, utilisateur, and frontend.
